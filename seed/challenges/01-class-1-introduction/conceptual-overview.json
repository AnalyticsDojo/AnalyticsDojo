{
  "name": "Conceptual Overview (During Class)",
  "order": 3,
  "time": "20 minutes",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "343ssd10ag82ac40a18392ge",
      "title": "Programming in Python and R Overview",
      "description": [
        [
          "//i.imgur.com/6MmQScx.png",
          "A image of a R and Python",
          "We will quickly get into the the actual programming, but before we do it is important to review some conceptual aspects of R and Python and the processes of data science. While they are different and have different strengths/weaknesses, but Python and R have a number of things in common that make them idea languages for data science. ",
          "",
          "",
          ""
        ],
        [
          "//i.imgur.com/AbjD7vh.jpg",
          "When R and when Python? (Or why do I need both?)",
          "Both R and Python are general purpose programming languages, so why are we suggesting that you learn both? Well when it comes to getting things done in programming there are a lot of factors.  <br><br><i>(1) How comfortable are you with the language?</i> Likely you will become more comfortable with one language or another.  If you haven't programmed before, R is a bit more forgiving and easy to use. <br><br><i>(2) Packages</i> Both R and Python have a package ecosystem that extend the capabilities of the language. This is an extremely important important aspect of when you might select one language over another. Generally, Python has a more extensive ecosystem in the areas of getting data (screen scraping, APIs, databases, etc.) while R has a more extensive ecosystem in modeling.  Let's say that you need to get some data out of a Salesforce. You may find a package for Python that that may make this easier. <br> <br> Check out this cool infographic to learn a bit more on the <i>R vs. Python</i> discussion.  We see it not as R vs. Python, but <i>R & Python</i> as the way to go.",
          "https://learnanalyticshere.wordpress.com/2015/05/14/clash-of-the-titans-r-vs-python/",
          "",
          ""
        ],
        [
          "//i.imgur.com/DbN59d7.jpg",
          "Everything is an object.",
          "An object is a nontrivial component relevant to understand. When you create any variable, array, dataframe, etc., you have created an object.  But what does that mean? Well, there are a few critical terms that we should be aware of. <br> <br><b>A object is an instance of a class.</b> What is a class then you say.  Well a class is a specific <i>thing</i> that can have both attributes and methods. We can have class types that are a part of the programming language and class types that are utilized via packages. Attributes you can think of as variables or sets of variables while methods you can think of as specific functions.  There is a lot of theoretical aspects of object oriented programming, and we will be introducing these along the way.",
          "",
          "",
          ""
        ]
      ],
      "challengeSeed": [],
      "tests": [],
      "type": "Waypoint",
      "challengeType": 7
    }
  ]
}
